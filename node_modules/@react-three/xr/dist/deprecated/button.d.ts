import { ButtonHTMLAttributes } from 'react';
import { XRStore } from '../xr.js';
/**
 * @deprecated use <button onClick={() => store.enterXR()}> instead
 */
export declare const XRButton: import("react").ForwardRefExoticComponent<{
    store: XRStore;
    mode: XRSessionMode;
    onError?: (error: any) => void;
    children?: React.ReactNode | ((status: "unsupported" | "exited" | "entered") => React.ReactNode);
} & Omit<ButtonHTMLAttributes<HTMLButtonElement>, "children" | "onError"> & import("react").RefAttributes<HTMLButtonElement>>;
/**
 * @deprecated use <button onClick={() => store.enterAR()}> instead
 */
export declare const ARButton: import("react").ForwardRefExoticComponent<Omit<Omit<{
    store: XRStore;
    mode: XRSessionMode;
    onError?: (error: any) => void;
    children?: React.ReactNode | ((status: "unsupported" | "exited" | "entered") => React.ReactNode);
} & Omit<ButtonHTMLAttributes<HTMLButtonElement>, "children" | "onError"> & import("react").RefAttributes<HTMLButtonElement>, "ref">, "mode"> & import("react").RefAttributes<HTMLButtonElement>>;
/**
 * @deprecated use <button onClick={() => store.enterVR()}> instead
 */
export declare const VRButton: import("react").ForwardRefExoticComponent<Omit<Omit<{
    store: XRStore;
    mode: XRSessionMode;
    onError?: (error: any) => void;
    children?: React.ReactNode | ((status: "unsupported" | "exited" | "entered") => React.ReactNode);
} & Omit<ButtonHTMLAttributes<HTMLButtonElement>, "children" | "onError"> & import("react").RefAttributes<HTMLButtonElement>, "ref">, "mode"> & import("react").RefAttributes<HTMLButtonElement>>;
