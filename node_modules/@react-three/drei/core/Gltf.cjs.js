"use strict";var e=require("@babel/runtime/helpers/extends"),r=require("react"),t=require("three-stdlib"),o=require("@react-three/fiber"),c=require("./Clone.cjs.js");function s(e){var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,o.get?o:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}require("three");var a=s(r);let n=null,d="https://www.gstatic.com/draco/versioned/decoders/1.5.5/";function u(e=!0,r=!0,o){return c=>{o&&o(c),e&&(n||(n=new t.DRACOLoader),n.setDecoderPath("string"==typeof e?e:d),c.setDRACOLoader(n)),r&&c.setMeshoptDecoder("function"==typeof t.MeshoptDecoder?t.MeshoptDecoder():t.MeshoptDecoder)}}const i=(e,r,c,s)=>o.useLoader(t.GLTFLoader,e,u(r,c,s));i.preload=(e,r,c,s)=>o.useLoader.preload(t.GLTFLoader,e,u(r,c,s)),i.clear=e=>o.useLoader.clear(t.GLTFLoader,e),i.setDecoderPath=e=>{d=e};const l=a.forwardRef((({src:r,useDraco:t,useMeshOpt:o,extendLoader:s,...n},d)=>{const{scene:u}=i(r,t,o,s);return a.createElement(c.Clone,e({ref:d},n,{object:u}))}));exports.Gltf=l,exports.useGLTF=i;
